# Main sub-process defined here

entergame(){
echo "==>Start FGO And Login!";echo
$adbshell ${cmdlist[$startapp]} $game
echo
sleep 30s
$adbshell ${cmdlist[$tap]} $mid
sleep 15s
$adbshell ${cmdlist[$tap]} $mid
sleep 12s
$adbshell ${cmdlist[$tap]} $shutadd
sleep 2s
$adbshell ${cmdlist[$tap]} $shutfp
sleep 1s
}
# Proc: Enter the game

getnum(){
$adbshell ${cmdlist[$screencap]}
sleep 1s
$adbnor ${cmdlist[$getpng]}
echo 
convert $root/png/a.png -crop $1 $root/png/b.png
tesseract $root/png/b.png $root/png/numget -l eng
echo 
if [ $2 = -ep ]
then
temp=(`sed -e 's/\// /' -e 's/L/ /' -e 's/M/ /' $root/png/numget.txt`)
ep=${temp[0]}
else
temp=(`cat $root/png/numget.txt`)
if [ $2 = -ap ]
then apple=${temp[0]}
else name=${temp[0]}
fi
fi
}
# Proc: Get some key number from the screenshoot

ckuseapple(){
if [ $left = 0 ]
then
echo "==>Test Golden Apple!";echo
$adbshell ${cmdlist[$tap]} $addep
sleep 1s
getnum $applesize -ap
echo "==>Apple Left: $apple";echo

if [ $apple == 0 ]
then
echo "==>No Golden Apple Left!"
echo;exit
else 
echo "==>Use Golden Apple!";echo
$adbshell ${cmdlist[$tap]} $useapple
sleep 1s
$adbshell ${cmdlist[$tap]} $useappleconfirm
sleep 1s
ckep
fi
fi
}
# Proc: Check if we need to use golden apple

ckep(){
if [ $left = 0 ]
then 
echo "==>Test EP!";echo
getnum $epsize -ep
echo "==>Ep Left: $ep";echo
left=$[$ep / $oneturn]
fi
}
# Proc: Check the EP left and update the left turn we can play

swipe5(){
for ad in 1 2 3 4 5
do
$adbshell ${cmdlist[$swipe]} $1 $2 $3 $4
sleep 1s
done
}
# Proc: Use this to swipe 5 times

firstenter(){
$adbshell ${cmdlist[$tap]} $enter1
sleep 1s
$adbshell ${cmdlist[$tap]} $enter2
sleep 2s
swipe5 $swipeup
}
# Proc: Action needed for the 1st time entering

firstenterother(){
swipe5 $otherswipe
$adbshell ${cmdlist[$tap]} $entermid
swipe5 $mapswipe
$adbshell ${cmdlist[$tap]} $entermap
}
# Proc: Action needed for the 1st time entering

getteam(){
echo "==>Looking For Team Named As ~$teamname~!";echo
getnum $namesize -tn
echo "==>Get Team: $name";echo
while [ ${name}x != ~${teamname}~x ]
do
$adbshell ${cmdlist[$swipe]} $teamswipe
sleep 2s
getnum $namesize -tn
echo "==>Get Team: $name";echo
done
echo "==>Get The Expected Team!";echo
}

startbattle(){
echo "==>Start Battle!";echo
$adbshell ${cmdlist[$tap]} $entermid
sleep 3s
$adbshell ${cmdlist[$tap]} $assistselect
sleep 2s
if [ $flag != 1 ]
then
getteam
fi
$adbshell ${cmdlist[$tap]} $startend
sleep 38s
}

finishbattle(){
echo "==>Battle Finished!";echo
sleep 4s
$adbshell ${cmdlist[$tap]} $startend
sleep 2s
$adbshell ${cmdlist[$tap]} $startend
sleep 2s
$adbshell ${cmdlist[$tap]} $startend
sleep 2s
$adbshell ${cmdlist[$tap]} $startend
sleep 17s
if [ $flag != 1 -o ${1}x != -cx ]
then
$adbshell ${cmdlist[$tap]} $shutfp
sleep 4s
fi
$adbshell ${cmdlist[$tap]} $shutfp
sleep 3s
}
# Proc: Finish the battle

autobattle(){
for num in 1 2 3 4 5
do
	if [ `echo ${battle[$num]} | wc -w` != 0 ]
	then 
		echo "==>Battle $num:";echo
		for act in ${battle[$num]}
		do
			$adbshell ${cmdlist[$tap]} `eval echo '$'"$act"`
			sleep `eval echo '$'"${act}_sleep"`
		done
		sleep 35s
	fi
done
}
# Proc: Auto Battle!

# ======================== #
# Main Action Start here

mainproc(){

if [ $1 = -qp -o $1 = -exp -o $1 = -other ]
then

if [ ${3}x != -cx -a ${3}x != -ccx ]
then entergame
fi

left=0
flag=0
turns=0

while [ 1 = 1 ]
do

ckep

ckuseapple

if [ $flag != 1 -a ${3}x != -ccx ]
then 

	if [ $1 = -qp -o $1 = -exp ]
	then
		firstenter
		sleep 1s

		if [ $1 == -qp ]
		then 
			swipe5 $qpswipe
		else
			$adbshell ${cmdlist[$swipe]} $expswipe
			sleep 1s
		fi

	else
		firstenterother
	fi
fi

startbattle

autobattle

finishbattle $3

flag=1
left=$[$left - 1]
turns=$[$turns + 1]

if [ $2 -le $turns ]
then 
	echo "==>Simulation Finished!";echo
	adb kill-server
	exit
else
	echo "==>Turns Left: $[$2 - $turns]";echo
fi

done

fi
}
# ======================== #

mainproc $1 $2 $3
